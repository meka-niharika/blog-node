<a href="/dashboard">&larr; Back</a>
<div class="admin-title">
  <h2>Add New Post</h2>
</div>

<!-- Include Quill CSS -->
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<style>
  #editor-container {
    height: 300px;
  }
  img {
    max-width: 100%;
  }
</style>

<!-- Form -->
<form id="post-form">
  <label for="title"><b>Title</b></label>
  <input type="text" id="title" placeholder="Post Title" name="title" required>

  <label for="body"><b>Content</b></label>
  <div id="editor-container"></div>

  <input type="submit" value="Add" class="btn">
</form>

<!-- Include Quill.js -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<script>
  var quill = new Quill("#editor-container", {
    theme: "snow",
    placeholder: "Write something amazing...",
    modules: {
      toolbar: [
      [{ font: [] }],  // Font options
      [{ size: ["small", false, "large", "huge"] }],  // Text size options
      [{ header: [1, 2, 3, 4, 5, false] }], // Heading sizes
      ["bold", "italic", "underline", "strike"], // Formatting options
      [{ color: [] }, { background: [] }], // Text color & background
      [{ align: [] }], // Text alignment
      ["blockquote", "code-block"], // Special formatting
      [{ list: "ordered" }, { list: "bullet" }], // Lists
      ["link", "image"], // Media options
      // ["clean"], // Remove formatting
      // ["emoji"], // Emoji picker
      // ["fullscreen"], // Fullscreen mode
      // ["formula"], // Math formula
      // ["video"], // Video embed
      // ["undo", "redo"], // Undo & Redo
      ],
    },
  });

  // Handle Image Upload
  quill.getModule("toolbar").addHandler("image", function () {
    let input = document.createElement("input");
    input.setAttribute("type", "file");
    input.setAttribute("accept", "image/*");
    input.click();

    input.onchange = function () {
      let file = input.files[0];
      if (file) {
        let reader = new FileReader();
        reader.onload = function (e) {
          let base64Image = e.target.result;
          let range = quill.getSelection();
          quill.insertEmbed(range.index, "image", base64Image);
        };
        reader.readAsDataURL(file);
      }
    };
  });

  document.getElementById("post-form").onsubmit = async function (event) {
    event.preventDefault();

    let title = document.getElementById("title").value.trim();
    let content = quill.root.innerHTML.trim();

    if (!title || !content || content === "<p><br></p>") {
      alert("Title and body are required!");
      return;
    }

    try {
      let response = await fetch("/add-post", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ title, body: content, textOnly: quill.getText() }),
      });

      let result = await response.text();
      alert(result);

      if (response.ok) {
        window.location.href = "/dashboard";
      }
    } catch (error) {
      console.error("Error submitting post:", error);
      alert("Failed to submit post. Please try again.");
    }
  };
</script>
