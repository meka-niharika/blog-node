<a href="/dashboard">&larr; Back</a>
<div class="admin-title">
  <h2>View / Edit Post</h2>
</div>

<style>
  #editor-container {
    height: 400px; /* Increased height for better usability */
  }
  img {
    max-width: 100%;
  }
</style>

<form id="edit-form">
  <label for="title"><b>Title</b></label>
  <input type="text" placeholder="Post Title" id="title" name="title" value="<%= data.title %>" required>

  <label for="body"><b>Content</b></label>
  <div id="editor-container"></div>

  <button type="submit" class="btn">Update</button>
</form>

<!-- Include Quill.js -->
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script src="https://cdn.jsdelivr.net/npm/quill-image-resize-module@3.0.0/image-resize.min.js"></script>

<script>
  var quill = new Quill('#editor-container', {
    theme: 'snow',
    placeholder: 'Edit your content...',
    modules: {
      toolbar: [
      [{ font: [] }],  // Font options
      [{ size: ["small", false, "large", "huge"] }],  // Text size options
      [{ header: [1, 2, 3, 4, 5, false] }], // Heading sizes
      ["bold", "italic", "underline", "strike"], // Formatting options
      [{ color: [] }, { background: [] }], // Text color & background
      [{ align: [] }], // Text alignment
      ["blockquote", "code-block"], // Special formatting
      [{ list: "ordered" }, { list: "bullet" }], // Lists
      ["link", "image"]
      ],
      imageResize: { 
        modules: ['Resize', 'DisplaySize', 'Toolbar']
      }
    }
  });

  // Load existing content into Quill editor
  var content = `<%- data.body %>`;
  quill.clipboard.dangerouslyPasteHTML(0, content);

  document.getElementById("edit-form").addEventListener("submit", async function(event) {
    event.preventDefault(); // Prevent default form submission

    const title = document.getElementById("title").value.trim();
    const body = quill.root.innerHTML.trim();

    if (!title || !body) {
      alert("Title and Body are required!");
      return;
    }

    try {
      const response = await fetch("/edit-post/<%= data._id %>?_method=PUT", {
        method: "POST",  // Use POST because Express doesn't natively support `_method=PUT`
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ title, body })
      });

      if (response.ok) {
        window.location.href = "/dashboard"; // âœ… Redirect to dashboard after update
      } else {
        const errorText = await response.text();
        alert("Error updating post: " + errorText);
      }
    } catch (error) {
      console.error("Error:", error);
      alert("An unexpected error occurred.");
    }
  });
</script>
